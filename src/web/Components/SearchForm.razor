@using lib
@using web.Data
@inject SavedService SavedService

<EditForm Model="@FilterOptions" OnValidSubmit="HandleSubmit">
    <div class="form-group mb-2">
        <AutocompleteTextInput 
            Value="@FilterOptions.Author"
            ValueChanged="val => FilterOptions.Author = val"
            Placeholder="Author"
            SuggestionProvider="GetAuthorSuggestions" />
    </div>
    <div class="form-group mb-2">
        <AutocompleteTextInput 
            Value="@FilterOptions.Subreddit"
            ValueChanged="val => FilterOptions.Subreddit = val"
            Placeholder="Subreddit"
            SuggestionProvider="GetSubredditSuggestions" />
    </div>
    <div class="form-group mb-2">
        <InputText class="form-control" placeholder="Query" @bind-Value="FilterOptions.Query"/>
    </div>
    <div class="form-group mb-3">
        <InputNumber class="form-control" placeholder="Total Results" @bind-Value="FilterOptions.Limit"/>
    </div>
    <div class="form-group mb-3 d-flex align-items-center">
        <InputCheckbox class="form-check-input" id="archive" @bind-Value="FilterOptions.IsArchive"/>
        <label class="form-check-label" for="archive">Search in local archive</label>
    </div>
    <div class="d-flex align-items-center">
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</EditForm>

@code {

    #region Properties

    [Parameter] public WebOptions FilterOptions { get; set; }
    [Parameter] public EventCallback<WebOptions> OnSearchInitiated { get; set; }

    #endregion

    #region Helper Methods
    
    private Task<List<string>> GetAuthorSuggestions(string input) =>
        SavedService.GetSuggestionsAsync("author", input);

    private Task<List<string>> GetSubredditSuggestions(string input) =>
        SavedService.GetSuggestionsAsync("subreddit", input);

    private async Task HandleSubmit()
    {
        await OnSearchInitiated.InvokeAsync(FilterOptions);
    }

    #endregion

}