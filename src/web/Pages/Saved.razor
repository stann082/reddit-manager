@page "/saved"
@using lib
@using Serilog
@using web.Components
@using web.Data
@inject SavedService SavedService

<PageTitle>Saved</PageTitle>

<div class="container mt-4">
    <h1>Saved</h1>
    <p class="text-muted">Search through comments saved in a local database.</p>

    <SearchForm FilterOptions="@_filterWebOptions" OnSearchInitiated="HandleSubmit"/>
    <button type="button" class="btn btn-link" @onclick="ShowAdvancedFilter">Advanced Filter</button>
    <button type="button" class="btn btn-link" @onclick="ResetAdvancedFilter">Reset Filter</button>
    <AdvancedFilter @ref="_advancedFilterComponent" OnApplyFilters="ApplyAdvancedFilters"/>
    <ResultDisplay Comments="@_comments" IsLoading="@_isLoading" ErrorMessage="@_errorMessage" SearchTerm="@_filterWebOptions.Query"/>
</div>

@code {

    #region Variables

    private AdvancedFilter _advancedFilterComponent = new();
    private CommentPreview[] _comments = [];
    private readonly WebOptions _filterWebOptions = new();
    private bool _isLoading;
    private string _errorMessage;

    #endregion

    #region Helper Methods

    private void ApplyAdvancedFilters(WebOptions webOptions)
    {
        _filterWebOptions.StartDate = webOptions.StartDate;
        _filterWebOptions.StopDate = webOptions.StopDate;
        _filterWebOptions.IsDescending = webOptions.IsDescending;
    }

    private async Task HandleSubmit()
    {
        _isLoading = true;
        _errorMessage = null;
        _comments = [];

        try
        {
            Log.Debug("Fetching saved comments with {@Options}", _filterWebOptions);
            await Task.Delay(250);

            var filteredComments = await SavedService.GetFilteredItemsAsync(_filterWebOptions);
            _comments = filteredComments.Item1;
        }
        catch (Exception ex)
        {
            LoggingManager.LogException(ex);
            _errorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void ResetAdvancedFilter()
    {
        _advancedFilterComponent.Reset();
    }

    private void ShowAdvancedFilter()
    {
        _advancedFilterComponent.Show();
    }

    #endregion

}